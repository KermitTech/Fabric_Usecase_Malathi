{
  "properties": {
    "activities": [
      {
        "type": "Copy",
        "typeProperties": {
          "source": {
            "type": "ExcelSource",
            "storeSettings": {
              "type": "AmazonS3ReadSettings",
              "recursive": true,
              "enablePartitionDiscovery": false
            },
            "datasetSettings": {
              "type": "Excel",
              "typeProperties": {
                "location": {
                  "type": "AmazonS3Location",
                  "bucketName": "mycoursefabricbucket",
                  "folderPath": "store",
                  "fileName": "store_data.xlsx"
                },
                "sheetName": "Sheet1",
                "firstRowAsHeader": true
              },
              "schema": [],
              "externalReferences": {
                "connection": "6533a15f-35e5-448f-82e2-8b19489e0aef"
              },
              "annotations": []
            }
          },
          "sink": {
            "type": "LakehouseTableSink",
            "tableActionOption": "OverwriteSchema",
            "partitionOption": "None",
            "datasetSettings": {
              "type": "LakehouseTable",
              "typeProperties": {
                "schema": "Supply_Chain",
                "table": "raw_store"
              },
              "schema": [],
              "linkedService": {
                "name": "Bronze",
                "properties": {
                  "type": "Lakehouse",
                  "typeProperties": {
                    "artifactId": "058e36bd-f06f-a6d4-4802-27659c3d1e3c",
                    "workspaceId": "00000000-0000-0000-0000-000000000000",
                    "rootFolder": "Tables"
                  },
                  "annotations": []
                }
              },
              "annotations": []
            }
          },
          "translator": {
            "type": "TabularTranslator",
            "typeConversion": true,
            "typeConversionSettings": {
              "allowDataTruncation": true,
              "treatBooleanAsNumber": false
            }
          },
          "enableStaging": false
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Copy Store data",
        "dependsOn": []
      },
      {
        "type": "Lookup",
        "typeProperties": {
          "source": {
            "type": "DataWarehouseSource",
            "sqlReaderQuery": "SELECT coalesce(max([transaction_id]),0)  max_value from [Bronze].[Supply_Chain].[raw_sales]",
            "partitionOption": "None",
            "queryTimeout": "02:00:00"
          },
          "datasetSettings": {
            "type": "DataWarehouseTable",
            "schema": [],
            "linkedService": {
              "name": "Gold",
              "properties": {
                "type": "DataWarehouse",
                "typeProperties": {
                  "artifactId": "5aed95e5-3a2c-497b-ac98-82c55dc7b36d",
                  "endpoint": "a5kotaldwscevlccuy24crmqsy-56cp7ruqstquvn6gxyigxvglrq.datawarehouse.fabric.microsoft.com",
                  "workspaceId": "c6ff84ef-9490-4ae1-b7c6-be106bd4cb8c"
                },
                "annotations": []
              }
            },
            "annotations": []
          },
          "firstRowOnly": true
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Get_max_value",
        "dependsOn": [
          {
            "activity": "Create Pre Source Sales table",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "SetVariable",
        "typeProperties": {
          "variableName": "Set_max_value",
          "value": {
            "value": "@activity('Get_max_value').output.firstRow.max_value",
            "type": "Expression"
          }
        },
        "policy": {
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Set_max_value",
        "dependsOn": [
          {
            "activity": "Get_max_value",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "Copy",
        "typeProperties": {
          "source": {
            "type": "MySqlSource",
            "query": {
              "value": "select * from demo.sales where transaction_id > @{variables('Set_max_value')}",
              "type": "Expression"
            },
            "datasetSettings": {
              "type": "MySqlTable",
              "schema": [],
              "externalReferences": {
                "connection": "1b358fc0-a556-4160-b5c4-55fd1e8448a6"
              },
              "annotations": []
            }
          },
          "sink": {
            "type": "LakehouseTableSink",
            "tableActionOption": "Append",
            "partitionOption": "None",
            "datasetSettings": {
              "type": "LakehouseTable",
              "typeProperties": {
                "schema": "Supply_Chain",
                "table": "raw_sales"
              },
              "schema": [],
              "linkedService": {
                "name": "Bronze",
                "properties": {
                  "type": "Lakehouse",
                  "typeProperties": {
                    "artifactId": "058e36bd-f06f-a6d4-4802-27659c3d1e3c",
                    "workspaceId": "00000000-0000-0000-0000-000000000000",
                    "rootFolder": "Tables"
                  },
                  "annotations": []
                }
              },
              "annotations": []
            }
          },
          "translator": {
            "type": "TabularTranslator",
            "mappings": [
              {
                "source": {
                  "name": "transaction_id",
                  "type": "Int32",
                  "physicalType": "Int32"
                },
                "sink": {
                  "name": "transaction_id",
                  "physicalType": "integer"
                }
              },
              {
                "source": {
                  "name": "product_id",
                  "type": "String",
                  "physicalType": "VarChar"
                },
                "sink": {
                  "name": "product_id",
                  "physicalType": "string"
                }
              },
              {
                "source": {
                  "name": "store_id",
                  "type": "String",
                  "physicalType": "VarChar"
                },
                "sink": {
                  "name": "store_id",
                  "physicalType": "string"
                }
              },
              {
                "source": {
                  "name": "sale_date",
                  "type": "DateTime",
                  "physicalType": "DateTime"
                },
                "sink": {
                  "name": "sale_date",
                  "physicalType": "timestamp"
                }
              },
              {
                "source": {
                  "name": "quantity",
                  "type": "Int32",
                  "physicalType": "Int32"
                },
                "sink": {
                  "name": "quantity",
                  "physicalType": "integer"
                }
              },
              {
                "source": {
                  "name": "unit_price",
                  "type": "Decimal",
                  "physicalType": "NewDecimal"
                },
                "sink": {
                  "name": "unit_price",
                  "physicalType": "decimal"
                }
              },
              {
                "source": {
                  "name": "discount",
                  "type": "Decimal",
                  "physicalType": "NewDecimal"
                },
                "sink": {
                  "name": "discount",
                  "physicalType": "decimal"
                }
              },
              {
                "source": {
                  "name": "sales_amount",
                  "type": "Decimal",
                  "physicalType": "NewDecimal"
                },
                "sink": {
                  "name": "sales_amount",
                  "physicalType": "decimal"
                }
              },
              {
                "source": {
                  "name": "customer_id",
                  "type": "Int32",
                  "physicalType": "Int32"
                },
                "sink": {
                  "name": "customer_id",
                  "physicalType": "integer"
                }
              }
            ],
            "typeConversion": true,
            "typeConversionSettings": {
              "allowDataTruncation": true,
              "treatBooleanAsNumber": false
            }
          },
          "enableStaging": false
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Copy Sales data",
        "dependsOn": [
          {
            "activity": "Set_max_value",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "Copy",
        "typeProperties": {
          "source": {
            "type": "DelimitedTextSource",
            "formatSettings": {
              "type": "DelimitedTextReadSettings"
            },
            "storeSettings": {
              "type": "AmazonS3ReadSettings",
              "recursive": true,
              "enablePartitionDiscovery": false
            },
            "datasetSettings": {
              "type": "DelimitedText",
              "typeProperties": {
                "location": {
                  "type": "AmazonS3Location",
                  "bucketName": "mycoursefabricbucket",
                  "folderPath": "product",
                  "fileName": "raw_product.csv"
                },
                "columnDelimiter": ",",
                "quoteChar": "\"",
                "escapeChar": "\\",
                "firstRowAsHeader": true
              },
              "schema": [],
              "externalReferences": {
                "connection": "6533a15f-35e5-448f-82e2-8b19489e0aef"
              },
              "annotations": []
            }
          },
          "sink": {
            "type": "LakehouseTableSink",
            "tableActionOption": "OverwriteSchema",
            "partitionOption": "None",
            "datasetSettings": {
              "type": "LakehouseTable",
              "typeProperties": {
                "schema": "Supply_Chain",
                "table": "raw_product"
              },
              "schema": [],
              "linkedService": {
                "name": "Bronze",
                "properties": {
                  "type": "Lakehouse",
                  "typeProperties": {
                    "artifactId": "058e36bd-f06f-a6d4-4802-27659c3d1e3c",
                    "workspaceId": "00000000-0000-0000-0000-000000000000",
                    "rootFolder": "Tables"
                  },
                  "annotations": []
                }
              },
              "annotations": []
            }
          },
          "translator": {
            "type": "TabularTranslator",
            "typeConversion": true,
            "typeConversionSettings": {
              "allowDataTruncation": true,
              "treatBooleanAsNumber": false
            }
          },
          "enableStaging": false
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Copy product data",
        "dependsOn": [
          {
            "activity": "Copy Store data",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "TridentNotebook",
        "typeProperties": {
          "notebookId": "d3075f95-d5ce-a9f4-4182-6e6ec4cd71f6",
          "workspaceId": "00000000-0000-0000-0000-000000000000"
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Cleansing_sales_data",
        "dependsOn": [
          {
            "activity": "Copy Sales data",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "TridentNotebook",
        "typeProperties": {
          "notebookId": "11d8c6a3-cb63-883f-45b0-edc50d03f506",
          "workspaceId": "00000000-0000-0000-0000-000000000000"
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Cleansing_store_data",
        "dependsOn": [
          {
            "activity": "Copy Sales data",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "TridentNotebook",
        "typeProperties": {
          "notebookId": "21ab9d8b-c475-8203-41b1-4639c11c81f7",
          "workspaceId": "00000000-0000-0000-0000-000000000000"
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Cleansing_product_data",
        "dependsOn": [
          {
            "activity": "Copy Sales data",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "TridentNotebook",
        "typeProperties": {
          "notebookId": "a2161d76-581d-9058-4e9d-9d71a0e08b4f",
          "workspaceId": "00000000-0000-0000-0000-000000000000"
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Create Pre Source Sales table",
        "dependsOn": [
          {
            "activity": "Copy Shipping",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "Script",
        "typeProperties": {
          "scripts": [
            {
              "text": {
                "value": "-- Drop Dim_Date table if it exists\nIF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Dim_Date') \n    DROP TABLE Dim_Date;\n\n\n\n\n-- Create Dim Date Table \nCREATE TABLE Dim_Date AS \nSELECT DISTINCT \n    CAST(sale_date AS DATE) AS sale_date, \n    CAST(DATENAME(WEEKDAY, sale_date) AS VARCHAR(20)) AS day_name, \n    DAY(sale_date) AS day_of_month,\n    DATEPART(WEEKDAY, sale_date) AS day_of_week, \n    MONTH(sale_date) AS month, \n    YEAR(sale_date) AS year, \n    DATEPART(WEEK, sale_date) AS week_of_year \nFROM Silver.Supply_Chain.Cleansed_sales;\n-- Drop Dim_Store table if it exists\nIF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Dim_Store') \n    DROP TABLE Dim_Store;\n-- Create Dim Store Table\nCREATE TABLE Dim_Store AS \nSELECT DISTINCT \n    store_id, \n    store_name, \n    address_line1, \n    city, \n    state, \n    country, \n    postal_code, \n    store_manager \nFROM Silver.Supply_Chain.Cleansed_store;\n-- Drop Dim_Product table if it exists\nIF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Dim_Product') \n    DROP TABLE Dim_Product;\n-- Create Dim Product Table\nCREATE TABLE Dim_Product AS \nSELECT DISTINCT \n    product_id, \n    product_name, \n    category, \n    sku, \n    sku_status \nFROM Silver.Supply_Chain.Cleansed_product;",
                "type": "Expression"
              },
              "type": "Query"
            }
          ],
          "scriptBlockExecutionTimeout": "02:00:00"
        },
        "linkedService": {
          "name": "Gold",
          "properties": {
            "type": "DataWarehouse",
            "typeProperties": {
              "artifactId": "5aed95e5-3a2c-497b-ac98-82c55dc7b36d",
              "endpoint": "a5kotaldwscevlccuy24crmqsy-56cp7ruqstquvn6gxyigxvglrq.datawarehouse.fabric.microsoft.com",
              "workspaceId": "c6ff84ef-9490-4ae1-b7c6-be106bd4cb8c"
            },
            "annotations": []
          }
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Create_Dim_Script",
        "dependsOn": [
          {
            "activity": "Cleansing_sales_data",
            "dependencyConditions": [
              "Succeeded"
            ]
          },
          {
            "activity": "Cleansing_store_data",
            "dependencyConditions": [
              "Succeeded"
            ]
          },
          {
            "activity": "Cleansing_product_data",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "Script",
        "typeProperties": {
          "scripts": [
            {
              "text": {
                "value": "-- Drop Fact table if it exists\nIF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Fact_Sales') \n    DROP TABLE Fact_Sales;\n-- Create Fact Sales Table  \nCREATE TABLE Fact_Sales AS SELECT s.transaction_id, d.sale_date AS date_key, d.month AS month_key, d.year AS year_key, \np.product_id AS product_key, p.category, st.store_id AS store_key, \ns.quantity, s.unit_price, s.discount, s.sales_amount AS total_amount FROM Bronze.Supply_Chain.raw_sales s \nJOIN Dim_Date d ON CAST(s.sale_date AS DATE) = d.sale_date JOIN Dim_Product p \nON s.product_id = p.product_id JOIN Dim_Store st ON s.store_id = st.store_id; ",
                "type": "Expression"
              },
              "type": "Query"
            }
          ],
          "scriptBlockExecutionTimeout": "02:00:00"
        },
        "linkedService": {
          "name": "Gold",
          "properties": {
            "type": "DataWarehouse",
            "typeProperties": {
              "artifactId": "5aed95e5-3a2c-497b-ac98-82c55dc7b36d",
              "endpoint": "a5kotaldwscevlccuy24crmqsy-56cp7ruqstquvn6gxyigxvglrq.datawarehouse.fabric.microsoft.com",
              "workspaceId": "c6ff84ef-9490-4ae1-b7c6-be106bd4cb8c"
            },
            "annotations": []
          }
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Create_Fact_Script",
        "dependsOn": [
          {
            "activity": "Create_Dim_Script",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "Copy",
        "typeProperties": {
          "source": {
            "type": "ParquetSource",
            "storeSettings": {
              "type": "AmazonS3ReadSettings",
              "recursive": true,
              "enablePartitionDiscovery": false
            },
            "formatSettings": {
              "type": "ParquetReadSettings"
            },
            "datasetSettings": {
              "type": "Parquet",
              "typeProperties": {
                "location": {
                  "type": "AmazonS3Location",
                  "bucketName": "mycoursefabricbucket",
                  "folderPath": "shipping",
                  "fileName": "shipping_data.parquet"
                },
                "compressionCodec": "snappy"
              },
              "schema": [],
              "externalReferences": {
                "connection": "6533a15f-35e5-448f-82e2-8b19489e0aef"
              },
              "annotations": []
            }
          },
          "sink": {
            "type": "LakehouseTableSink",
            "tableActionOption": "Append",
            "datasetSettings": {
              "type": "LakehouseTable",
              "typeProperties": {
                "schema": "Supply_Chain",
                "table": "raw_shipping"
              },
              "schema": [],
              "linkedService": {
                "name": "Bronze",
                "properties": {
                  "type": "Lakehouse",
                  "typeProperties": {
                    "artifactId": "058e36bd-f06f-a6d4-4802-27659c3d1e3c",
                    "workspaceId": "00000000-0000-0000-0000-000000000000",
                    "rootFolder": "Tables"
                  },
                  "annotations": []
                }
              },
              "annotations": []
            }
          },
          "translator": {
            "type": "TabularTranslator",
            "typeConversion": true,
            "typeConversionSettings": {
              "allowDataTruncation": true,
              "treatBooleanAsNumber": false
            }
          },
          "enableStaging": false
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Copy Shipping",
        "dependsOn": [
          {
            "activity": "Copy product data",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      }
    ],
    "parameters": {
      "endpoint": {
        "type": "string",
        "defaultValue": "database-1.cpe2m4a8ab3o.us-east-1.rds.amazonaws.com"
      },
      "database": {
        "type": "string",
        "defaultValue": "demo"
      },
      "username": {
        "type": "string",
        "defaultValue": "admin"
      },
      "password": {
        "type": "string",
        "defaultValue": "Rdspassword1234"
      }
    },
    "variables": {
      "Set_max_value": {
        "type": "Integer"
      }
    }
  }
}